{"version":3,"sources":["Components/ContactsList/ContactsItem/ContactsItem.module.css","Components/ContactsList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","Components/Form/Form.js","Components/ContactsList/ContactsItem/ContactsItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","shortid","generate","name","number","deleteContact","filterContacts","getAllContacts","state","contacts","items","getFilterValue","filter","visibleContacts","contact","toLocaleLowerCase","includes","getContactsName","map","toLowerCase","Form","contactsName","useSelector","dispatch","useDispatch","useState","setName","setNumber","onSubmit","e","preventDefault","alert","className","s","form","label","type","value","onChange","currentTarget","input","btn","ContactsItem","onDelete","item","onClick","Contacts","list","actions","Filter","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","persistContactsConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0fcf323d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__2almy\",\"btn\":\"ContactsItem_btn__2fLKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1lJiE\"};","// import * as types from './contacts-types';\r\nimport shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// export const addContact = data => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n\r\nexport const addContact = createAction('contacts/add', data => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const filterContacts = createAction('contacts/changeFilter');\r\n\r\n// export const filterContacts = value => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","export const getAllContacts = state => state.contacts.items;\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const visibleContacts = state => {\r\n  const contacts = getAllContacts(state);\r\n  const filter = getFilterValue(state);\r\n  return contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\n\r\nexport const getContactsName = state => {\r\n  const contacts = getAllContacts(state);\r\n  return contacts.map(contact => contact.name.toLowerCase());\r\n};\r\n","import s from './Form.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContactsName } from '../../redux/contacts/contacts-selectors';\n\nfunction Form() {\n  const contactsName = useSelector(getContactsName);\n\n  const dispatch = useDispatch();\n  const onSubmit = contact => dispatch(addContact(contact));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contactsName.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts!`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          className={s.input}\n        ></input>\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleNumberChange}\n          className={s.input}\n        ></input>\n      </label>\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import s from './ContactsItem.module.css';\n\nexport default function ContactsItem({ id, name, number, onDelete }) {\n  return (\n    <li key={id} className={s.item}>\n      {name}: {number}\n      <button type=\"button\" className={s.btn} onClick={onDelete}>\n        delete\n      </button>\n    </li>\n  );\n}\n","import ContactsItem from './ContactsItem/ContactsItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { visibleContacts } from '../../redux/contacts/contacts-selectors';\n\nfunction Contacts() {\n  const contacts = useSelector(visibleContacts);\n  const dispatch = useDispatch();\n  const onDelete = contactId => dispatch(actions.deleteContact(contactId));\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactsItem\n            key={id}\n            name={name}\n            number={number}\n            onDelete={() => onDelete(id)}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Contacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\n\nfunction Filter() {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterContacts(e.target.value));\n\n  return (\n    <label>\n      Find contacts by Name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nexport default Filter;\n","import Form from './Components/Form/Form';\nimport Contacts from './Components/ContactsList/ContactsList';\nimport Filter from './Components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\n// import * as types from './contacts-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const items = (state = initialContacts, action) => {\r\n//   switch (action.type) {\r\n//     case types.ADD:\r\n//       return [action.payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(contact => action.payload !== contact.id);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => payload !== id),\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst persistContactsConfig = {\r\n  key: 'contacts',\r\n  storage: storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistContactsConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2gY7a\",\"btn\":\"Form_btn__DBNKJ\",\"label\":\"Form_label__gmzfq\",\"input\":\"Form_input__oJQDM\"};"],"sourceRoot":""}